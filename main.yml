# Derived from ./elasticsearch ./fluentd ./kibana
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: efk
  name: efk

 
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: efk
  labels:
    service: elasticsearch
spec:
  clusterIP: None
  ports:
  - port: 9200
    name: serving
  - port: 9300
    name: node-to-node
  selector:
    service: elasticsearch

--- 

apiVersion: apps/v1
kind: StatefulSet
metadata: 
  labels: 
    service: elasticsearch
  name: elasticsearch
  namespace: efk
spec: 
  replicas: 3
  selector: 
    matchLabels: 
      service: elasticsearch
  serviceName: es
  template: 
    metadata: 
      labels: 
        service: elasticsearch
    spec: 
      containers: 
        - 
          env: 
            - 
              name: cluster.name
              value: elasticsearch-cluster
            - 
              name: node.name
              valueFrom: 
                fieldRef: 
                  fieldPath: metadata.name
            - 
              name: discovery.zen.ping.unicast.hosts
              value: "elasticsearch-0.es.default.svc.cluster.local,elasticsearch-1.es.default.svc.cluster.local,elasticsearch-2.es.default.svc.cluster.local,elasticsearch-3.es.default.svc.cluster.local,elasticsearch-4.es.default.svc.cluster.local"
            - 
              name: ES_JAVA_OPTS
              value: "-Xms4g -Xmx4g"
          image: "docker.elastic.co/elasticsearch/elasticsearch:6.5.1"
          name: elasticsearch
          ports: 
            - 
              containerPort: 9200
              name: http
            - 
              containerPort: 9300
              name: tcp
          resources: 
            limits: 
              memory: 8Gi
            requests: 
              memory: 8Gi
          volumeMounts: 
            - 
              mountPath: /usr/share/elasticsearch/data
              name: data
      initContainers: 
        - 
          command: 
            - sh
            - "-c"
            - "chown -R 1000:1000 /usr/share/elasticsearch/data"
          image: busybox
          name: fix-the-volume-permission
          securityContext: 
            privileged: true
          volumeMounts: 
            - 
              mountPath: /usr/share/elasticsearch/data
              name: data
        - 
          command: 
            - sysctl
            - "-w"
            - vm.max_map_count=262144
          image: busybox
          name: increase-the-vm-max-map-count
          securityContext: 
            privileged: true
        - 
          command: 
            - sh
            - "-c"
            - "ulimit -n 65536"
          image: busybox
          name: increase-the-ulimit
          securityContext: 
            privileged: true
      terminationGracePeriodSeconds: 300
  volumeClaimTemplates: 
    - 
      metadata: 
        name: data
      spec: 
        accessModes: 
          - ReadWriteOnce
        resources: 
          requests: 
            storage: 10Gi

 
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kibana
  namespace: efk
spec:
  selector:
    matchLabels:
      run: kibana
  template:
    metadata:
      labels:
        run: kibana
    spec:
      initContainers:            
      - name: wait
        image: busybox
        imagePullPolicy: Always
        command:
        - sh        
        - -c 
        - |  
           while [[ $(curl -s -o /dev/null -w "%{http_code}" http://elasticsearch:9200) -ne 200 ]]; do
           	echo "Elasticsearch endpoint not ready"
           	sleep 5s
           done
           echo "Elasticsearch endpoint is ready"
      containers:
      - name: kibana
        image: "docker.elastic.co/kibana/kibana:6.5.1"
        env:
        - name: ELASTICSEARCH_URL
          value: http://elasticsearch:9200
        ports:
        - containerPort: 5601
          name: http
          protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: efk
  labels:
    service: kibana
spec:
  type: NodePort
  selector:
    run: kibana
  ports:
  - port: 5601
    targetPort: 5601
 
---
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  namespace: efk

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: fluentd
  namespace: efk
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - list
  - watch

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: fluentd
roleRef:
  kind: ClusterRole
  name: fluentd
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: fluentd
  namespace: efk
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: fluentd
  namespace: efk
  labels:
    k8s-app: fluentd-logging
    version: v1
    kubernetes.io/cluster-service: "true"
spec:
  template:
    metadata:
      labels:
        k8s-app: fluentd-logging
        version: v1
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccount: fluentd
      serviceAccountName: fluentd
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      initContainers:
      - name: wait
        image: busybox
        imagePullPolicy: Always
        command:
        - sh
        - -c
        - |
           while [[ $(curl -s -o /dev/null -w "%{http_code}" http://elasticsearch:9200) -ne 200 ]]; do
                echo "Elasticsearch endpoint not ready"
                sleep 5s
           done
           echo "Elasticsearch endpoint is ready"        
      containers:
      - name: fluentd
        image: fluent/fluentd-kubernetes-daemonset:elasticsearch
        env:
          - name: FLUENT_UID
            value: "0"     
          - name: FLUENT_ELASTICSEARCH_HOST
            value: "elasticsearch"
          - name: FLUENT_ELASTICSEARCH_PORT
            value: "9200"
          - name: FLUENT_ELASTICSEARCH_SCHEME
            value: "http"
          # X-Pack Authentication
          # =====================
          #- name: FLUENT_ELASTICSEARCH_USER
          #  value: "elastic"
          #- name: FLUENT_ELASTICSEARCH_PASSWORD
          #  value: "changeme"
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
 
---
